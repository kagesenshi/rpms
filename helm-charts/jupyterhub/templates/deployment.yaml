{{- include "require" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "jupyterhub.fullname" . }}
  labels:
    {{- include "jupyterhub.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "jupyterhub.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "jupyterhub.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "jupyterhub.selectorLabels" . | nindent 8 }}
    spec:
      setHostnameAsFQDN: true
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "jupyterhub.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: {{ include "jupyterhub.fullname" . }}-config
          secret:
            secretName: {{ include "jupyterhub.fullname" . }}-config
        - name: {{ include "jupyterhub.fullname" . }}-spark-config
          secret:
            secretName: {{ .Values.spark.secret_name }}
        - name: {{ include "jupyterhub.fullname" . }}-airflow-config
          secret:
            secretName: {{ .Values.airflow.secret_name }}
    
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ['hub', '-f', '/etc/jupyterhub/jupyterhub_config.py']
          env:
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 15
          volumeMounts:
            - name: {{ include "jupyterhub.fullname" . }}-config
              mountPath: "/etc/jupyterhub/"
            - name: {{ include "jupyterhub.fullname" . }}-spark-config
              mountPath: "/etc/spark3/"
            - name: {{ include "jupyterhub.fullname" . }}-spark-config
              mountPath: "/opt/apache/spark3/conf/"
            - name: {{ include "jupyterhub.fullname" . }}-airflow-config
              mountPath: "/etc/apache-airflow/"
            - name: {{ include "jupyterhub.fullname" . }}-datadir
              mountPath: "/var/lib/jupyterhub"
            - name: {{ include "jupyterhub.fullname" . }}-datadir
              mountPath: "/workdir"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

  volumeClaimTemplates:
    - metadata:
        name: {{ include "jupyterhub.fullname" . }}-datadir
      spec:
        accessModes:
          - {{ .Values.storageAccessMode | default "ReadWriteMany" }}
        {{ if .Values.storageClass -}}
        storageClassName: {{ quote .Values.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.jupyterhub.instance_storage  | quote }}
